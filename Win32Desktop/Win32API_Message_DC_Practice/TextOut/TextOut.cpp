#include <windows.h> 
#include <tchar.h> 

LRESULT CALLBACK WndProc(HWND hwnd, UINT msg,
	WPARAM wParam, LPARAM lParam)
{
	switch (msg)
	{
	case WM_LBUTTONDOWN:
	{
		TCHAR str[256];
		wsprintf(str, TEXT("10시 32분에 서울로 가는 KTX산천-235 열차입니다"));	//문자열
		RECT rt = { 100, 100, 300, 300 };	//영역 지정
		HDC hdc = GetDC(hwnd);
		//SetTextAlign(hdc, TA_UPDATECP);
		DrawText(hdc, str, -1, &rt, DT_CENTER | DT_WORDBREAK);	//DC핸들, 문자열 주소, 문자열 길이 (-1 : 널문자 종료), 영역, 플래그
		ReleaseDC(hwnd, hdc);
	}
		return 0;
	case WM_PAINT:
	{
		PAINTSTRUCT ps;
		HDC hdc = BeginPaint(hwnd, &ps);	//무효화영역을 위한 DC핸들을 획득하는 함수 : 윈도우 핸들,	PAINTSTRUCT 주소
		SetTextAlign(hdc, TA_CENTER);	//텍스트정렬 스타일 지정 : DC핸들,	옵션
		//===================================
		HFONT font = (HFONT)GetStockObject(ANSI_FIXED_FONT);
		HFONT old = (HFONT)SelectObject(hdc, font);
		//===================================
		TextOut(hdc, 200, 60, TEXT("KTX-4010"), _tcslen(TEXT("KTX-4010")));	//DC핸들,	좌표x,	좌표y,	문자열,	문자열길이
		TextOut(hdc, 200, 80, TEXT("SRT-327"), _tcslen(TEXT("SRT-327")));

		DeleteObject(SelectObject(hdc, old));
		EndPaint(hwnd, &ps);	//무효화영역의 DC핸들 해제를 위한 함수 : 윈도우 핸들,	PAINTSTRUCT 주소
	}
		return 0;
	case WM_CREATE:
		return 0;
	case WM_DESTROY:
		PostQuitMessage(0);
		return 0;
	}
	return DefWindowProc(hwnd, msg, wParam, lParam);
}

int WINAPI _tWinMain(HINSTANCE hInst, HINSTANCE hPrev,
	LPTSTR lpCmdLine, int nShowCmd)
{
	// 1. 윈도우 클래스 만들기 
	WNDCLASS wc;
	wc.cbWndExtra = 0;
	wc.cbClsExtra = 0;
	wc.hbrBackground = (HBRUSH)GetStockObject(WHITE_BRUSH);
	wc.hCursor = LoadCursor(0, IDC_ARROW);
	wc.hIcon = LoadIcon(0, IDI_APPLICATION);
	wc.hInstance = hInst;
	wc.lpfnWndProc = WndProc;
	wc.lpszClassName = TEXT("First");
	wc.lpszMenuName = 0; wc.style = 0;

	// 2. 등록(레지스트리에) 
	RegisterClass(&wc);

	// 3. 윈도우 창 만들기 
	HWND hwnd = CreateWindowEx(0, // WS_EX_TOPMOST 
		TEXT("first"), // 클래스 명 
		TEXT("Hello"), // 캡션바 내용 
		WS_OVERLAPPEDWINDOW,
		CW_USEDEFAULT, 0, CW_USEDEFAULT, 0,// 초기 위치 
		0, 0, // 부모 윈도우 핸들, 메뉴 핸들 
		hInst, // WinMain의 1번째 파라미터 (exe 주소) 
		0); // 생성 인자 

	// 4. 윈도우 보여주기 
	ShowWindow(hwnd, SW_SHOW);
	UpdateWindow(hwnd);

	// 5. Message 
	MSG msg;
	while (GetMessage(&msg, 0, 0, 0))
	{
		TranslateMessage(&msg);
		DispatchMessage(&msg);
	} return 0;
}